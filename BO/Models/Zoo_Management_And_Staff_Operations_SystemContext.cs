// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;

namespace BO.Models;

public partial class Zoo_Management_And_Staff_Operations_SystemContext : DbContext
{
    public Zoo_Management_And_Staff_Operations_SystemContext()
    {
    }
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        if (!optionsBuilder.IsConfigured)
        {
            optionsBuilder.UseSqlServer(new ConfigurationBuilder().AddJsonFile("appsettings.json").Build().GetConnectionString("DefaultConnection"));
        }
    }
    public Zoo_Management_And_Staff_Operations_SystemContext(DbContextOptions<Zoo_Management_And_Staff_Operations_SystemContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AbsentTime> AbsentTimes { get; set; }

    public virtual DbSet<Account> Accounts { get; set; }

    public virtual DbSet<Animal> Animals { get; set; }

    public virtual DbSet<AnimalAssign> AnimalAssigns { get; set; }

    public virtual DbSet<AnimalCage> AnimalCages { get; set; }

    public virtual DbSet<AnimalImage> AnimalImages { get; set; }

    public virtual DbSet<AnimalIncidentHistory> AnimalIncidentHistories { get; set; }

    public virtual DbSet<AnimalType> AnimalTypes { get; set; }

    public virtual DbSet<AnimalUpdateHistory> AnimalUpdateHistories { get; set; }

    public virtual DbSet<Application> Applications { get; set; }

    public virtual DbSet<ApplicationType> ApplicationTypes { get; set; }

    public virtual DbSet<Cage> Cages { get; set; }

    public virtual DbSet<CageUpdateHistory> CageUpdateHistories { get; set; }

    public virtual DbSet<Evaluation> Evaluations { get; set; }

    public virtual DbSet<Flock> Flocks { get; set; }

    public virtual DbSet<IncompatibleAnimalType> IncompatibleAnimalTypes { get; set; }

    public virtual DbSet<Individual> Individuals { get; set; }

    public virtual DbSet<LeaderAssign> LeaderAssigns { get; set; }

    public virtual DbSet<MemberAssign> MemberAssigns { get; set; }

    public virtual DbSet<News> News { get; set; }

    public virtual DbSet<Notification> Notifications { get; set; }

    public virtual DbSet<Report> Reports { get; set; }

    public virtual DbSet<ReportAttachment> ReportAttachments { get; set; }

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<Schedule> Schedules { get; set; }

    public virtual DbSet<Task> Tasks { get; set; }

    public virtual DbSet<TaskEstimate> TaskEstimates { get; set; }

    public virtual DbSet<TaskType> TaskTypes { get; set; }

    public virtual DbSet<Team> Teams { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<ZooArea> ZooAreas { get; set; }

    public virtual DbSet<ZooAreaImage> ZooAreaImages { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AbsentTime>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__AbsentTi__3213E83F542C71F9");

            entity.ToTable("AbsentTime");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AccountId).HasColumnName("account_id");
            entity.Property(e => e.FromDate).HasColumnName("from_date");
            entity.Property(e => e.Reason).HasColumnName("reason");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.ToDate).HasColumnName("to_date");

            entity.HasOne(d => d.Account).WithMany(p => p.AbsentTimes)
                .HasForeignKey(d => d.AccountId)
                .HasConstraintName("FK__AbsentTim__accou__04E4BC85");
        });

        modelBuilder.Entity<Account>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Account__3213E83F2F3A27FD");

            entity.ToTable("Account");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CreatedDate).HasColumnName("created_date");
            entity.Property(e => e.Email)
                .HasMaxLength(500)
                .HasColumnName("email");
            entity.Property(e => e.Password)
                .HasMaxLength(500)
                .HasColumnName("password");
            entity.Property(e => e.RoleId).HasColumnName("role_id");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.UpdatedDate).HasColumnName("updated_date");

            entity.HasOne(d => d.Role).WithMany(p => p.Accounts)
                .HasForeignKey(d => d.RoleId)
                .HasConstraintName("FK__Account__role_id__05D8E0BE");
        });

        modelBuilder.Entity<Animal>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Animal__3213E83FF466123A");

            entity.ToTable("Animal");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AnimalTypeId).HasColumnName("animal_type_id");
            entity.Property(e => e.Classify)
                .HasMaxLength(500)
                .HasColumnName("classify");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("description");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");

            entity.HasOne(d => d.AnimalType).WithMany(p => p.Animals)
                .HasForeignKey(d => d.AnimalTypeId)
                .HasConstraintName("FK__Animal__animal_t__06CD04F7");
        });

        modelBuilder.Entity<AnimalAssign>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__AnimalAs__3213E83F3ED6B01E");

            entity.ToTable("AnimalAssign");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AnimalCageId).HasColumnName("animal_cage_id");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.TaskId).HasColumnName("task_id");

            entity.HasOne(d => d.AnimalCage).WithMany(p => p.AnimalAssigns)
                .HasForeignKey(d => d.AnimalCageId)
                .HasConstraintName("FK__AnimalAss__anima__07C12930");

            entity.HasOne(d => d.Task).WithMany(p => p.AnimalAssigns)
                .HasForeignKey(d => d.TaskId)
                .HasConstraintName("FK__AnimalAss__task___08B54D69");
        });

        modelBuilder.Entity<AnimalCage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__AnimalCa__3213E83F655A0AD5");

            entity.ToTable("AnimalCage");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AnimalId).HasColumnName("animal_id");
            entity.Property(e => e.CageId).HasColumnName("cage_id");
            entity.Property(e => e.FromDate).HasColumnName("from_date");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.ToDate).HasColumnName("to_date");

            entity.HasOne(d => d.Animal).WithMany(p => p.AnimalCages)
                .HasForeignKey(d => d.AnimalId)
                .HasConstraintName("FK__AnimalCag__anima__09A971A2");

            entity.HasOne(d => d.Cage).WithMany(p => p.AnimalCages)
                .HasForeignKey(d => d.CageId)
                .HasConstraintName("FK__AnimalCag__cage___0A9D95DB");
        });

        modelBuilder.Entity<AnimalImage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__AnimalIm__3213E83FF9BA686E");

            entity.ToTable("AnimalImage");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AnimalId).HasColumnName("animal_id");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.UrlImage).HasColumnName("url_image");

            entity.HasOne(d => d.Animal).WithMany(p => p.AnimalImages)
                .HasForeignKey(d => d.AnimalId)
                .HasConstraintName("FK__AnimalIma__anima__0B91BA14");
        });

        modelBuilder.Entity<AnimalIncidentHistory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__AnimalIn__3213E83F01BB539D");

            entity.ToTable("AnimalIncidentHistory");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AnimalId).HasColumnName("animal_id");
            entity.Property(e => e.Content)
                .HasMaxLength(500)
                .HasColumnName("content");
            entity.Property(e => e.FromDate).HasColumnName("from_date");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.ToDate).HasColumnName("to_date");

            entity.HasOne(d => d.Animal).WithMany(p => p.AnimalIncidentHistories)
                .HasForeignKey(d => d.AnimalId)
                .HasConstraintName("FK__AnimalInc__anima__0C85DE4D");
        });

        modelBuilder.Entity<AnimalType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__AnimalTy__3213E83F3B73CB43");

            entity.ToTable("AnimalType");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Characteristics)
                .HasMaxLength(500)
                .HasColumnName("characteristics");
            entity.Property(e => e.ConservationStatus)
                .HasMaxLength(20)
                .HasColumnName("conservation_status");
            entity.Property(e => e.Diet)
                .HasMaxLength(500)
                .HasColumnName("diet");
            entity.Property(e => e.Distribution)
                .HasMaxLength(500)
                .HasColumnName("distribution");
            entity.Property(e => e.EatFrequency)
                .HasMaxLength(500)
                .HasColumnName("eat_frequency");
            entity.Property(e => e.EnglishName)
                .HasMaxLength(500)
                .HasColumnName("english_name");
            entity.Property(e => e.Family)
                .HasMaxLength(500)
                .HasColumnName("family");
            entity.Property(e => e.Habitat)
                .HasMaxLength(500)
                .HasColumnName("habitat");
            entity.Property(e => e.Reproduction)
                .HasMaxLength(500)
                .HasColumnName("reproduction");
            entity.Property(e => e.ScientificName)
                .HasMaxLength(500)
                .HasColumnName("scientific_name");
            entity.Property(e => e.UrlImage).HasColumnName("url_image");
            entity.Property(e => e.VietnameseName)
                .HasMaxLength(500)
                .HasColumnName("vietnamese_name");
            entity.Property(e => e.WeightRange)
                .HasMaxLength(500)
                .HasColumnName("weight_range");
        });

        modelBuilder.Entity<AnimalUpdateHistory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__AnimalUp__3213E83F8CA81742");

            entity.ToTable("AnimalUpdateHistory");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AccountId).HasColumnName("account_id");
            entity.Property(e => e.AnimalId).HasColumnName("animal_id");
            entity.Property(e => e.Detail)
                .HasMaxLength(500)
                .HasColumnName("detail");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.UpdateDate).HasColumnName("update_date");

            entity.HasOne(d => d.Account).WithMany(p => p.AnimalUpdateHistories)
                .HasForeignKey(d => d.AccountId)
                .HasConstraintName("FK__AnimalUpd__accou__0D7A0286");

            entity.HasOne(d => d.Animal).WithMany(p => p.AnimalUpdateHistories)
                .HasForeignKey(d => d.AnimalId)
                .HasConstraintName("FK__AnimalUpd__anima__0E6E26BF");
        });

        modelBuilder.Entity<Application>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Applicat__3213E83F83FB8BBE");

            entity.ToTable("Application");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ApplicationTypeId).HasColumnName("application_type_id");
            entity.Property(e => e.Date).HasColumnName("date");
            entity.Property(e => e.Details)
                .HasMaxLength(500)
                .HasColumnName("details");
            entity.Property(e => e.RecieverId).HasColumnName("reciever_id");
            entity.Property(e => e.Reply)
                .HasMaxLength(500)
                .HasColumnName("reply");
            entity.Property(e => e.SenderId).HasColumnName("sender_id");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.Title)
                .HasMaxLength(500)
                .HasColumnName("title");

            entity.HasOne(d => d.ApplicationType).WithMany(p => p.Applications)
                .HasForeignKey(d => d.ApplicationTypeId)
                .HasConstraintName("FK__Applicati__appli__0F624AF8");

            entity.HasOne(d => d.Reciever).WithMany(p => p.ApplicationRecievers)
                .HasForeignKey(d => d.RecieverId)
                .HasConstraintName("FK__Applicati__recie__10566F31");

            entity.HasOne(d => d.Sender).WithMany(p => p.ApplicationSenders)
                .HasForeignKey(d => d.SenderId)
                .HasConstraintName("FK__Applicati__sende__114A936A");
        });

        modelBuilder.Entity<ApplicationType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Applicat__3213E83FC575CDA2");

            entity.ToTable("ApplicationType");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("description");
            entity.Property(e => e.Name)
                .HasMaxLength(500)
                .HasColumnName("name");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
        });

        modelBuilder.Entity<Cage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Cage__3213E83FB678B210");

            entity.ToTable("Cage");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Classify)
                .HasMaxLength(500)
                .HasColumnName("classify");
            entity.Property(e => e.CurrentQuantity).HasColumnName("current_quantity");
            entity.Property(e => e.DateCreate).HasColumnName("date_create");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("description");
            entity.Property(e => e.MaxQuantity).HasColumnName("max_quantity");
            entity.Property(e => e.Name)
                .HasMaxLength(500)
                .HasColumnName("name");
            entity.Property(e => e.Size)
                .HasMaxLength(500)
                .HasColumnName("size");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.UrlImage).HasColumnName("url_image");
            entity.Property(e => e.ZooAreaId).HasColumnName("zoo_area_id");

            entity.HasOne(d => d.ZooArea).WithMany(p => p.Cages)
                .HasForeignKey(d => d.ZooAreaId)
                .HasConstraintName("FK__Cage__zoo_area_i__123EB7A3");
        });

        modelBuilder.Entity<CageUpdateHistory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CageUpda__3213E83F242D80A0");

            entity.ToTable("CageUpdateHistory");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AccountId).HasColumnName("account_id");
            entity.Property(e => e.CageId).HasColumnName("cage_id");
            entity.Property(e => e.Detail)
                .HasMaxLength(500)
                .HasColumnName("detail");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.UpdateDate).HasColumnName("update_date");

            entity.HasOne(d => d.Account).WithMany(p => p.CageUpdateHistories)
                .HasForeignKey(d => d.AccountId)
                .HasConstraintName("FK__CageUpdat__accou__1332DBDC");

            entity.HasOne(d => d.Cage).WithMany(p => p.CageUpdateHistories)
                .HasForeignKey(d => d.CageId)
                .HasConstraintName("FK__CageUpdat__cage___14270015");
        });

        modelBuilder.Entity<Evaluation>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Evaluati__3213E83F59C872B0");

            entity.ToTable("Evaluation");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Date).HasColumnName("date");
            entity.Property(e => e.Details)
                .HasMaxLength(500)
                .HasColumnName("details");
            entity.Property(e => e.LeaderId).HasColumnName("leader_id");
            entity.Property(e => e.MaxScore).HasColumnName("max_score");
            entity.Property(e => e.MemberId).HasColumnName("member_id");
            entity.Property(e => e.Score).HasColumnName("score");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.Title)
                .HasMaxLength(500)
                .HasColumnName("title");

            entity.HasOne(d => d.Leader).WithMany(p => p.Evaluations)
                .HasForeignKey(d => d.LeaderId)
                .HasConstraintName("FK__Evaluatio__leade__151B244E");

            entity.HasOne(d => d.Member).WithMany(p => p.Evaluations)
                .HasForeignKey(d => d.MemberId)
                .HasConstraintName("FK__Evaluatio__membe__160F4887");
        });

        modelBuilder.Entity<Flock>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Flock__3213E83F03D64F13");

            entity.ToTable("Flock");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AnimalId).HasColumnName("animal_id");
            entity.Property(e => e.Notes)
                .HasMaxLength(500)
                .HasColumnName("notes");
            entity.Property(e => e.Quantity).HasColumnName("quantity");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");

            entity.HasOne(d => d.Animal).WithMany(p => p.Flocks)
                .HasForeignKey(d => d.AnimalId)
                .HasConstraintName("FK__Flock__animal_id__17036CC0");
        });

        modelBuilder.Entity<IncompatibleAnimalType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Incompat__3213E83F25893BAE");

            entity.ToTable("IncompatibleAnimalType");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AnimalTypeId1).HasColumnName("animal_type_id_1");
            entity.Property(e => e.AnimalTypeId2).HasColumnName("animal_type_id_2");
            entity.Property(e => e.Reason)
                .HasMaxLength(500)
                .HasColumnName("reason");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");

            entity.HasOne(d => d.AnimalTypeId1Navigation).WithMany(p => p.IncompatibleAnimalTypeAnimalTypeId1Navigations)
                .HasForeignKey(d => d.AnimalTypeId1)
                .HasConstraintName("FK__Incompati__anima__17F790F9");

            entity.HasOne(d => d.AnimalTypeId2Navigation).WithMany(p => p.IncompatibleAnimalTypeAnimalTypeId2Navigations)
                .HasForeignKey(d => d.AnimalTypeId2)
                .HasConstraintName("FK__Incompati__anima__18EBB532");
        });

        modelBuilder.Entity<Individual>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Individu__3213E83F7DDB6858");

            entity.ToTable("Individual");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Age)
                .HasMaxLength(500)
                .HasColumnName("age");
            entity.Property(e => e.AnimalId).HasColumnName("animal_id");
            entity.Property(e => e.ArrivalDate).HasColumnName("arrival_date");
            entity.Property(e => e.BirthDate).HasColumnName("birth_date");
            entity.Property(e => e.Gender)
                .HasMaxLength(500)
                .HasColumnName("gender");
            entity.Property(e => e.Height)
                .HasMaxLength(500)
                .HasColumnName("height");
            entity.Property(e => e.Name)
                .HasMaxLength(500)
                .HasColumnName("name");
            entity.Property(e => e.Notes)
                .HasMaxLength(500)
                .HasColumnName("notes");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.Weight)
                .HasMaxLength(500)
                .HasColumnName("weight");

            entity.HasOne(d => d.Animal).WithMany(p => p.Individuals)
                .HasForeignKey(d => d.AnimalId)
                .HasConstraintName("FK__Individua__anima__19DFD96B");
        });

        modelBuilder.Entity<LeaderAssign>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__LeaderAs__3213E83F8487B36B");

            entity.ToTable("LeaderAssign");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.FromDate).HasColumnName("from_date");
            entity.Property(e => e.LeaderId).HasColumnName("leader_id");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.TeamId).HasColumnName("team_id");
            entity.Property(e => e.ToDate).HasColumnName("to_date");

            entity.HasOne(d => d.Leader).WithMany(p => p.LeaderAssigns)
                .HasForeignKey(d => d.LeaderId)
                .HasConstraintName("FK__LeaderAss__leade__1AD3FDA4");

            entity.HasOne(d => d.Team).WithMany(p => p.LeaderAssigns)
                .HasForeignKey(d => d.TeamId)
                .HasConstraintName("FK__LeaderAss__team___1BC821DD");
        });

        modelBuilder.Entity<MemberAssign>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MemberAs__3213E83F544ED0D9");

            entity.ToTable("MemberAssign");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.FromDate).HasColumnName("from_date");
            entity.Property(e => e.MemberId).HasColumnName("member_id");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.TeamId).HasColumnName("team_id");
            entity.Property(e => e.ToDate).HasColumnName("to_date");

            entity.HasOne(d => d.Member).WithMany(p => p.MemberAssigns)
                .HasForeignKey(d => d.MemberId)
                .HasConstraintName("FK__MemberAss__membe__1CBC4616");

            entity.HasOne(d => d.Team).WithMany(p => p.MemberAssigns)
                .HasForeignKey(d => d.TeamId)
                .HasConstraintName("FK__MemberAss__team___1DB06A4F");
        });

        modelBuilder.Entity<News>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__News__3213E83FDCB023EC");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AccountId).HasColumnName("account_id");
            entity.Property(e => e.Content)
                .HasMaxLength(500)
                .HasColumnName("content");
            entity.Property(e => e.Date)
                .HasColumnType("datetime")
                .HasColumnName("date");
            entity.Property(e => e.Headline)
                .HasMaxLength(500)
                .HasColumnName("headline");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");

            entity.HasOne(d => d.Account).WithMany(p => p.News)
                .HasForeignKey(d => d.AccountId)
                .HasConstraintName("FK__News__account_id__1EA48E88");
        });

        modelBuilder.Entity<Notification>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Notifica__3213E83F6014078F");

            entity.ToTable("Notification");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AccountId).HasColumnName("account_id");
            entity.Property(e => e.Content)
                .HasMaxLength(500)
                .HasColumnName("content");
            entity.Property(e => e.CreatedDate)
                .HasColumnType("datetime")
                .HasColumnName("created_date");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");

            entity.HasOne(d => d.Account).WithMany(p => p.Notifications)
                .HasForeignKey(d => d.AccountId)
                .HasConstraintName("FK__Notificat__accou__1F98B2C1");
        });

        modelBuilder.Entity<Report>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Report__3213E83F796E49DE");

            entity.ToTable("Report");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Content)
                .HasMaxLength(500)
                .HasColumnName("content");
            entity.Property(e => e.Date)
                .HasColumnType("datetime")
                .HasColumnName("date");
            entity.Property(e => e.ReceiverId).HasColumnName("receiver_id");
            entity.Property(e => e.SenderId).HasColumnName("sender_id");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.Title)
                .HasMaxLength(500)
                .HasColumnName("title");

            entity.HasOne(d => d.Receiver).WithMany(p => p.ReportReceivers)
                .HasForeignKey(d => d.ReceiverId)
                .HasConstraintName("FK__Report__receiver__208CD6FA");

            entity.HasOne(d => d.Sender).WithMany(p => p.ReportSenders)
                .HasForeignKey(d => d.SenderId)
                .HasConstraintName("FK__Report__sender_i__2180FB33");
        });

        modelBuilder.Entity<ReportAttachment>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ReportAt__3213E83F0E92F028");

            entity.ToTable("ReportAttachment");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.FileUrl).HasColumnName("file_url");
            entity.Property(e => e.ReportId).HasColumnName("report_id");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");

            entity.HasOne(d => d.Report).WithMany(p => p.ReportAttachments)
                .HasForeignKey(d => d.ReportId)
                .HasConstraintName("FK__ReportAtt__repor__22751F6C");
        });

        modelBuilder.Entity<Role>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Role__3213E83FCF014E8F");

            entity.ToTable("Role");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MaxAbsencePerMonth).HasColumnName("max_absence_per_month");
            entity.Property(e => e.RoleName)
                .HasMaxLength(500)
                .HasColumnName("role_name");
        });

        modelBuilder.Entity<Schedule>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Schedule__3213E83F7FF4D47E");

            entity.ToTable("Schedule");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AccountId).HasColumnName("account_id");
            entity.Property(e => e.Date).HasColumnName("date");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("note");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");

            entity.HasOne(d => d.Account).WithMany(p => p.Schedules)
                .HasForeignKey(d => d.AccountId)
                .HasConstraintName("FK__Schedule__accoun__236943A5");
        });

        modelBuilder.Entity<Task>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Task__3213E83FED3FEE43");

            entity.ToTable("Task");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("description");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("note");
            entity.Property(e => e.Priority)
                .HasMaxLength(500)
                .HasColumnName("priority");
            entity.Property(e => e.ScheduleId).HasColumnName("schedule_id");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.TaskName)
                .HasMaxLength(500)
                .HasColumnName("task_name");
            entity.Property(e => e.TaskTypeId).HasColumnName("task_type_id");
            entity.Property(e => e.TimeEnd).HasColumnName("time_end");
            entity.Property(e => e.TimeStart).HasColumnName("time_start");

            entity.HasOne(d => d.Schedule).WithMany(p => p.Tasks)
                .HasForeignKey(d => d.ScheduleId)
                .HasConstraintName("FK__Task__schedule_i__245D67DE");

            entity.HasOne(d => d.TaskType).WithMany(p => p.Tasks)
                .HasForeignKey(d => d.TaskTypeId)
                .HasConstraintName("FK__Task__task_type___25518C17");
        });

        modelBuilder.Entity<TaskEstimate>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TaskEsti__3213E83FBBB2A14F");

            entity.ToTable("TaskEstimate");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AnimalTypeId).HasColumnName("animal_type_id");
            entity.Property(e => e.ImplementationProcess)
                .HasMaxLength(500)
                .HasColumnName("implementation_process");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.TaskTypeId).HasColumnName("task_type_id");
            entity.Property(e => e.TimeEstimate)
                .HasMaxLength(500)
                .HasColumnName("time_estimate");

            entity.HasOne(d => d.AnimalType).WithMany(p => p.TaskEstimates)
                .HasForeignKey(d => d.AnimalTypeId)
                .HasConstraintName("FK__TaskEstim__anima__2645B050");

            entity.HasOne(d => d.TaskType).WithMany(p => p.TaskEstimates)
                .HasForeignKey(d => d.TaskTypeId)
                .HasConstraintName("FK__TaskEstim__task___2739D489");
        });

        modelBuilder.Entity<TaskType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TaskType__3213E83F2328A8FE");

            entity.ToTable("TaskType");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("description");
            entity.Property(e => e.Name)
                .HasMaxLength(500)
                .HasColumnName("name");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
        });

        modelBuilder.Entity<Team>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Team__3213E83F22A81836");

            entity.ToTable("Team");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CurrentQuantity).HasColumnName("current_quantity");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("description");
            entity.Property(e => e.MaxQuantity).HasColumnName("max_quantity");
            entity.Property(e => e.Name)
                .HasMaxLength(500)
                .HasColumnName("name");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.ZooAreaId).HasColumnName("zoo_area_id");

            entity.HasOne(d => d.ZooArea).WithMany(p => p.Teams)
                .HasForeignKey(d => d.ZooAreaId)
                .HasConstraintName("FK__Team__zoo_area_i__282DF8C2");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__User__3213E83F3B38352C");

            entity.ToTable("User");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AccountId).HasColumnName("account_id");
            entity.Property(e => e.Address)
                .HasMaxLength(500)
                .HasColumnName("address");
            entity.Property(e => e.AvartarUrl)
                .HasMaxLength(500)
                .HasColumnName("avartar_url");
            entity.Property(e => e.Experience)
                .HasMaxLength(20)
                .HasColumnName("experience");
            entity.Property(e => e.Gender)
                .HasMaxLength(20)
                .HasColumnName("gender");
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(20)
                .HasColumnName("phoneNumber");

            entity.HasOne(d => d.Account).WithMany(p => p.Users)
                .HasForeignKey(d => d.AccountId)
                .HasConstraintName("FK__User__account_id__29221CFB");
        });

        modelBuilder.Entity<ZooArea>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ZooArea__3213E83FB0CB46F5");

            entity.ToTable("ZooArea");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AnimalOrder)
                .HasMaxLength(500)
                .HasColumnName("animal_order");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("description");
            entity.Property(e => e.Location)
                .HasMaxLength(500)
                .HasColumnName("location");
            entity.Property(e => e.Name)
                .HasMaxLength(500)
                .HasColumnName("name");
            entity.Property(e => e.Size)
                .HasMaxLength(500)
                .HasColumnName("size");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
        });

        modelBuilder.Entity<ZooAreaImage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ZooAreaI__3213E83F28B00ED4");

            entity.ToTable("ZooAreaImage");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Status)
                .HasMaxLength(500)
                .HasColumnName("status");
            entity.Property(e => e.UrlImage).HasColumnName("url_image");
            entity.Property(e => e.ZooAreaId).HasColumnName("zoo_area_id");

            entity.HasOne(d => d.ZooArea).WithMany(p => p.ZooAreaImages)
                .HasForeignKey(d => d.ZooAreaId)
                .HasConstraintName("FK__ZooAreaIm__zoo_a__2A164134");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}